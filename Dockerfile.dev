# # ---------------------------
# # Imagen para levantar Storybook en modo desarrollo
# # ---------------------------

# ---------------------------
# Etapa de construcción (builder)
# ---------------------------
FROM node:23.6.1-alpine3.21 AS dev-builder

# 2. Configurar Corepack primero como root
RUN corepack enable && corepack prepare yarn@latest --activate

# Configurar entorno de desarrollo
WORKDIR /app

# Variables de entorno para registros privados
ARG GBP_PACKAGE_TOKEN
ARG FONT_AWESOME_TOKEN

# Convierte los ARGs en ENV para que Yarn las use durante el build
ENV GBP_PACKAGE_TOKEN=$GBP_PACKAGE_TOKEN
ENV FONT_AWESOME_TOKEN=$FONT_AWESOME_TOKEN

# Copiar archivos de configuración
COPY .yarnrc.yml package.json lerna.json tsconfig.json vite.config.base.ts ./

# Copiar carpetas necesarias para generar los workspaces de yarn
COPY components/ components/
COPY common/ common/
COPY scripts/ scripts/

# Instalar dependencias
RUN corepack use yarn@latest

# Crear el building de los componentes
RUN yarn build

# ---------------------------
# Etapa final de desarrollo
# ---------------------------
FROM dev-builder AS development

# Copiar código fuente
COPY . .

COPY --from=dev-builder /app/node_modules ./node_modules
COPY --from=dev-builder /app/components ./components
COPY --from=dev-builder /app/common ./common

# Instalar herramientas como root
RUN apk add --no-cache \
    curl \
    git \
    bash \
    openssh-client \
    && rm -rf /var/cache/apk/*

# Puertos y salud
EXPOSE 6006
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s CMD curl --fail http://localhost:6006 || exit 1

# Comando principal con hot-reload
CMD ["yarn", "storybook"]